<!-- partials/navigation.ejs -->
<nav class="bg-white shadow-lg border-b border-gray-200 sticky top-0 z-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center h-16">
            <!-- Logo y nombre -->
            <div class="flex items-center space-x-3">
                <a href="/dashboard" class="flex items-center space-x-3 hover:opacity-80 transition-opacity">
                    <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-lg flex items-center justify-center shadow-md">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path>
                        </svg>
                    </div>
                    <span class="text-xl font-bold text-gray-900">Dardito</span>
                </a>
            </div>

            <!-- Navegación principal -->
            <div class="hidden md:flex items-center space-x-1">
                <% if (typeof user !== 'undefined' && user) { %>
                    <!-- Dashboard - Todos los roles -->
                    <button class="nav-link dashboard-btn px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 transition-all duration-200 active" data-section="dashboard">
                        <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h4a2 2 0 012 2v2H8V5z"></path>
                        </svg>
                        Dashboard
                    </button>

                    <!-- Navegación para MIEMBRO -->
                    <% if (user.rol === 'miembro') { %>
                        <button class="nav-link backlog-btn px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-green-600 hover:bg-green-50 transition-all duration-200" data-section="backlog">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                            </svg>
                            Product Backlog
                        </button>
                    <% } %>

                    <!-- Navegación para SCRUM MASTER -->
                    <% if (user.rol === 'scrumMaster') { %>
                        <button class="nav-link backlog-btn px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-green-600 hover:bg-green-50 transition-all duration-200" data-section="backlog">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                            </svg>
                            Product Backlog
                        </button>

                        <button class="nav-link stats-btn px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-purple-600 hover:bg-purple-50 transition-all duration-200" data-section="stats">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                            Estadísticas
                        </button>
                    <% } %>

                    <!-- Navegación para LÍDER -->
                    <% if (user.rol === 'lider') { %>
                        <button class="nav-link backlog-btn px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-green-600 hover:bg-green-50 transition-all duration-200" data-section="backlog">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                            </svg>
                            Product Backlog
                        </button>

                        <button class="nav-link stats-btn px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-purple-600 hover:bg-purple-50 transition-all duration-200" data-section="stats">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                            Estadísticas
                        </button>
                    <% } %>

                    <!-- Navegación para ADMIN/AUDITOR -->
                    <% if (user.rol === 'auditor') { %>
                        <button class="nav-link equipo-btn px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-indigo-600 hover:bg-indigo-50 transition-all duration-200" data-section="equipos" data-equipo="Grupo1">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                            </svg>
                            Equipos
                        </button>

                        <button class="nav-link stats-btn px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-purple-600 hover:bg-purple-50 transition-all duration-200" data-section="stats">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                            Estadísticas Globales
                        </button>
                    <% } %>
                <% } %>
            </div>

            <!-- Usuario y menú móvil -->
            <div class="flex items-center space-x-4">
                <% if (typeof user !== 'undefined' && user) { %>
                    <!-- Información del usuario -->
                    <div class="hidden sm:flex items-center space-x-3">
                        <div class="text-right">
                            <div class="text-sm font-medium text-gray-900"><%= user.nickname %></div>
                            <div class="text-xs text-gray-500 flex items-center">
                                <div class="w-2 h-2 rounded-full mr-1 
                                    <% if (user.rol === 'auditor') { %>bg-green-400<% } %>
                                    <% if (user.rol === 'lider') { %>bg-yellow-400<% } %>
                                    <% if (user.rol === 'scrumMaster') { %>bg-purple-400<% } %>
                                    <% if (user.rol === 'miembro') { %>bg-blue-400<% } %>
                                "></div>
                                <%= user.rol %>
                                <% if (user.grupo && user.grupo !== 'Admin') { %>
                                    | <%= user.grupo %>
                                <% } %>
                            </div>
                        </div>
                        
                        <!-- Avatar -->
                        <div class="w-10 h-10 bg-gradient-to-r from-gray-400 to-gray-600 rounded-full flex items-center justify-center">
                            <span class="text-white font-semibold text-sm">
                                <%= user.nickname.split(' ').map(n => n[0]).join('').substring(0, 2).toUpperCase() %>
                            </span>
                        </div>
                    </div>

                    <!-- Menú de usuario -->
                    <div class="relative group">
                        <button class="p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200">
                            <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 5a2 2 0 100 .01M12 12a2 2 0 100 .01M12 19a2 2 0 100 .01"></path>
                            </svg>
                        </button>
                        <div class="absolute right-0 mt-1 w-56 bg-white rounded-lg shadow-lg border border-gray-200 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
                            <div class="py-1">
                                <!-- Enlaces del menú -->
                                <a href="https://discord.com/invite/QYppQjV5uR" target="_blank" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600">
                                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.04.03-.06c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
                                    </svg>
                                    Discord
                                </a>
                                
                                <div class="border-t border-gray-100 my-1"></div>
                                
                                <!-- Cerrar sesión -->
                                <form method="POST" action="/logout" class="block">
                                    <button type="submit" class="flex items-center w-full px-4 py-2 text-sm text-red-700 hover:bg-red-50 hover:text-red-600 transition-colors">
                                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
                                        </svg>
                                        Cerrar Sesión
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                <% } else { %>
                    <!-- Si no hay usuario logueado -->
                    <a href="/login" class="btn-primary">
                        Iniciar Sesión
                    </a>
                <% } %>

                <!-- Menú móvil -->
                <div class="md:hidden">
                    <button id="mobileMenuBtn" class="p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200">
                        <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Menú móvil expandible -->
        <div id="mobileMenu" class="md:hidden hidden border-t border-gray-200">
            <div class="px-2 pt-2 pb-3 space-y-1">
                <% if (typeof user !== 'undefined' && user) { %>
                    <button class="nav-link dashboard-btn block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 active" data-section="dashboard">Dashboard</button>
                    
                    <!-- Menú móvil para MIEMBRO -->
                    <% if (user.rol === 'miembro') { %>
                        <button class="nav-link backlog-btn block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-green-600 hover:bg-green-50" data-section="backlog">Product Backlog</button>
                    <% } %>

                    <!-- Menú móvil para SCRUM MASTER -->
                    <% if (user.rol === 'scrumMaster') { %>
                        <button class="nav-link backlog-btn block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-green-600 hover:bg-green-50" data-section="backlog">Product Backlog</button>
                        <button class="nav-link stats-btn block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-purple-600 hover:bg-purple-50" data-section="stats">Estadísticas</button>
                    <% } %>

                    <!-- Menú móvil para LÍDER -->
                    <% if (user.rol === 'lider') { %>
                        <button class="nav-link backlog-btn block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-green-600 hover:bg-green-50" data-section="backlog">Product Backlog</button>
                        <button class="nav-link stats-btn block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-purple-600 hover:bg-purple-50" data-section="stats">Estadísticas</button>
                    <% } %>

                    <!-- Menú móvil para ADMIN/AUDITOR -->
                    <% if (user.rol === 'auditor') { %>
                        <div class="px-3 py-1 text-xs font-semibold text-gray-500 uppercase tracking-wide">Admin</div>
                        <button class="nav-link equipo-btn block w-full text-left px-3 py-2 rounded-lg text-sm text-gray-600 hover:text-indigo-600 hover:bg-indigo-50" data-section="equipos" data-equipo="Grupo1">Gestión de Equipos</button>
                        <button class="nav-link stats-btn block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-purple-600 hover:bg-purple-50" data-section="stats">Estadísticas Globales</button>
                    <% } %>
                    
                    <div class="border-t border-gray-200 mt-2 pt-2">
                        <form method="POST" action="/logout">
                            <button type="submit" class="block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-red-700 hover:text-red-600 hover:bg-red-50">
                                Cerrar Sesión
                            </button>
                        </form>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</nav>

<!-- Loading overlay para transiciones de contenido -->
<div id="navigationLoadingOverlay" class="fixed inset-0 bg-white bg-opacity-90 flex items-center justify-center z-40 hidden">
    <div class="text-center">
        <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mb-4"></div>
        <p class="text-gray-600">Cargando contenido...</p>
    </div>
</div>

<!-- Script para manejar navegación dinámica -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('🧭 Inicializando sistema de navegación dinámico...');

    // ============================================
    // VARIABLES GLOBALES DE NAVEGACIÓN
    // ============================================
    
    const navigationState = {
        currentSection: 'dashboard',
        contentContainer: '#main-content',
        isLoading: false,
        cache: new Map() // Cache para contenido cargado
    };

    // ============================================
    // UTILIDADES DE NAVEGACIÓN
    // ============================================
    
    function showNavigationLoading(show = true) {
        const overlay = document.getElementById('navigationLoadingOverlay');
        if (overlay) {
            overlay.classList.toggle('hidden', !show);
        }
        navigationState.isLoading = show;
    }

    function setActiveNavItem(section) {
        // Remover clase active de todos los elementos
        document.querySelectorAll('.nav-link').forEach(link => {
            link.classList.remove('active');
        });
        
        // Agregar clase active al elemento correspondiente
        const activeButtons = document.querySelectorAll(`[data-section="${section}"]`);
        activeButtons.forEach(btn => btn.classList.add('active'));
    }

    function showNavigationError(message) {
        const container = document.querySelector(navigationState.contentContainer);
        if (!container) return;

        container.innerHTML = `
            <div class="bg-red-50 border border-red-200 rounded-lg p-6 m-4">
                <div class="flex items-center">
                    <svg class="w-6 h-6 text-red-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <div>
                        <h3 class="text-lg font-medium text-red-800">Error de navegación</h3>
                        <p class="text-red-600 mt-1">${message}</p>
                        <button onclick="window.navigationManager.loadSection('dashboard')" class="mt-3 bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors">
                            Volver al Dashboard
                        </button>
                    </div>
                </div>
            </div>
        `;
    }

    // ============================================
    // GESTIÓN DE CONTENIDO DINÁMICO
    // ============================================
    
    async function loadSectionContent(section, options = {}) {
        if (navigationState.isLoading) return;
        
        try {
            showNavigationLoading(true);
            
            // Verificar cache si está habilitado
            const cacheKey = `${section}-${JSON.stringify(options)}`;
            if (options.useCache && navigationState.cache.has(cacheKey)) {
                console.log(`📋 Cargando ${section} desde cache`);
                const cachedContent = navigationState.cache.get(cacheKey);
                await renderSectionContent(section, cachedContent);
                return;
            }

            console.log(`🔄 Cargando sección: ${section}`);
            
            let endpoint = '';
            let fetchOptions = {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'text/html,application/json'
                }
            };

            // Determinar endpoint según la sección
            switch (section) {
                case 'dashboard':
                    endpoint = '/api/sections/dashboard';
                    break;
                case 'backlog':
                    endpoint = '/api/sections/backlog';
                    break;
                case 'stats':
                    endpoint = '/api/sections/stats';
                    if (options.equipo) {
                        endpoint += `?equipo=${options.equipo}`;
                    }
                    break;
                case 'equipos':
                    endpoint = '/api/sections/equipos';
                    if (options.equipo) {
                        endpoint += `?equipo=${options.equipo}`;
                    }
                    break;
                default:
                    throw new Error(`Sección desconocida: ${section}`);
            }

            const response = await fetch(endpoint, fetchOptions);
            
            if (!response.ok) {
                throw new Error(`Error ${response.status}: ${response.statusText}`);
            }

            const content = await response.text();
            
            // Guardar en cache si está habilitado
            if (options.useCache) {
                navigationState.cache.set(cacheKey, content);
            }
            
            await renderSectionContent(section, content);
            
        } catch (error) {
            console.error(`❌ Error cargando sección ${section}:`, error);
            showNavigationError(`Error cargando ${section}: ${error.message}`);
        } finally {
            showNavigationLoading(false);
        }
    }

    async function renderSectionContent(section, content) {
        const container = document.querySelector(navigationState.contentContainer);
        if (!container) {
            throw new Error('Contenedor de contenido no encontrado');
        }

        // Animación de salida
        container.style.opacity = '0';
        container.style.transform = 'translateY(10px)';
        
        await new Promise(resolve => setTimeout(resolve, 150));
        
        // Insertar nuevo contenido
        container.innerHTML = content;
        
        // Animación de entrada
        container.style.opacity = '1';
        container.style.transform = 'translateY(0)';
        container.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
        
        // Actualizar estado
        navigationState.currentSection = section;
        setActiveNavItem(section);
        
        // Disparar evento personalizado para que los componentes se inicialicen
        window.dispatchEvent(new CustomEvent('navigationContentLoaded', { 
            detail: { 
                section: section,
                container: container
            } 
        }));
        
        console.log(`✅ Sección ${section} cargada correctamente`);
    }

    // ============================================
    // GESTOR DE NAVEGACIÓN GLOBAL
    // ============================================
    
    window.navigationManager = {
        // Estado actual
        getCurrentSection: () => navigationState.currentSection,
        isLoading: () => navigationState.isLoading,
        
        // Cargar sección específica
        loadSection: async function(section, options = {}) {
            if (navigationState.currentSection === section && !options.forceReload) {
                console.log(`📌 Ya estás en la sección ${section}`);
                return;
            }
            
            await loadSectionContent(section, options);
        },
        
        // Recargar sección actual
        reloadCurrentSection: async function() {
            await this.loadSection(navigationState.currentSection, { forceReload: true });
        },
        
        // Limpiar cache
        clearCache: function() {
            navigationState.cache.clear();
            console.log('🧹 Cache de navegación limpiado');
        },
        
        // Métodos específicos para cada sección
        loadDashboard: function() {
            return this.loadSection('dashboard', { useCache: true });
        },
        
        loadBacklog: function() {
            return this.loadSection('backlog', { useCache: false }); // No cachear backlog
        },
        
        loadStats: function(equipo = null) {
            return this.loadSection('stats', { 
                equipo: equipo,
                useCache: true 
            });
        },
        
        loadEquipos: function(equipo = null) {
            return this.loadSection('equipos', { 
                equipo: equipo,
                useCache: false 
            });
        }
    };

    // ============================================
    // EVENT LISTENERS DE NAVEGACIÓN
    // ============================================
    
    function setupNavigationEventListeners() {
        // Dashboard buttons
        document.querySelectorAll('.dashboard-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                window.navigationManager.loadDashboard();
            });
        });

        // Backlog buttons
        document.querySelectorAll('.backlog-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                window.navigationManager.loadBacklog();
            });
        });

        // Stats buttons
        document.querySelectorAll('.stats-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const equipo = this.dataset.equipo || null;
                window.navigationManager.loadStats(equipo);
            });
        });

        // Equipos buttons (Admin)
        document.querySelectorAll('.equipo-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const equipo = this.dataset.equipo || null;
                window.navigationManager.loadEquipos(equipo);
            });
        });

        // Atajos de teclado
        document.addEventListener('keydown', function(e) {
            if (e.altKey && !navigationState.isLoading) {
                switch(e.key.toLowerCase()) {
                    case 'd':
                        e.preventDefault();
                        window.navigationManager.loadDashboard();
                        break;
                    case 'b':
                        e.preventDefault();
                        window.navigationManager.loadBacklog();
                        break;
                    case 's':
                        e.preventDefault();
                        window.navigationManager.loadStats();
                        break;
                    case 'r':
                        e.preventDefault();
                        window.navigationManager.reloadCurrentSection();
                        break;
                }
            }
        });
    }

    // ============================================
    // MENÚ MÓVIL
    // ============================================
    
    function setupMobileMenu() {
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const mobileMenu = document.getElementById('mobileMenu');
        
        if (mobileMenuBtn && mobileMenu) {
            mobileMenuBtn.addEventListener('click', function() {
                mobileMenu.classList.toggle('hidden');
            });
            
            // Cerrar menú al hacer clic fuera
            document.addEventListener('click', function(e) {
                if (!mobileMenuBtn.contains(e.target) && !mobileMenu.contains(e.target)) {
                    mobileMenu.classList.add('hidden');
                }
            });

            // Cerrar menú al navegar
            window.addEventListener('navigationContentLoaded', function() {
                mobileMenu.classList.add('hidden');
            });
        }
    }

    // ============================================
    // INICIALIZACIÓN
    // ============================================
    
    function initializeNavigation() {
        console.log('🚀 Inicializando navegación...');
        
        setupNavigationEventListeners();
        setupMobileMenu();
        
        // Marcar dashboard como activo por defecto
        setActiveNavItem('dashboard');
        
        // Evento para notificar que la navegación está lista
        window.dispatchEvent(new CustomEvent('navigationReady', {
            detail: { manager: window.navigationManager }
        }));
        
        console.log('✅ Sistema de navegación inicializado correctamente');
    }

    // ============================================
    // AUTO-INICIALIZACIÓN
    // ============================================
    
    // Verificar si hay un contenedor de contenido disponible
    const contentContainer = document.querySelector(navigationState.contentContainer);
    if (contentContainer) {
        initializeNavigation();
    } else {
        console.warn('⚠️ Contenedor de contenido no encontrado, esperando...');
        // Intentar inicializar después de un breve delay
        setTimeout(() => {
            if (document.querySelector(navigationState.contentContainer)) {
                initializeNavigation();
            } else {
                console.error('❌ No se pudo encontrar el contenedor de contenido');
            }
        }, 1000);
    }

    // ============================================
    // MANEJO DE ERRORES GLOBALES
    // ============================================
    
    window.addEventListener('error', function(e) {
        if (navigationState.isLoading) {
            console.error('❌ Error durante la carga de navegación:', e.error);
            showNavigationError('Error inesperado durante la carga del contenido');
            showNavigationLoading(false);
        }
    });

    // ============================================
    // INTEGRACIÓN CON HISTORY API
    // ============================================
    
    // Escuchar cambios en el historial del navegador
    window.addEventListener('popstate', function(e) {
        if (e.state && e.state.section) {
            window.navigationManager.loadSection(e.state.section, { 
                forceReload: true 
            });
        }
    });

    // Actualizar URL cuando cambie la sección
    window.addEventListener('navigationContentLoaded', function(e) {
        const section = e.detail.section;
        const url = section === 'dashboard' ? '/dashboard' : `/dashboard/${section}`;
        
        // Actualizar URL sin recargar página
        window.history.pushState(
            { section: section }, 
            `Dardito - ${section.charAt(0).toUpperCase() + section.slice(1)}`, 
            url
        );
    });
});
</script>

<!-- Estilos CSS específicos para la navegación -->
<style>
    /* ============================================
       ESTILOS DE NAVEGACIÓN
       ============================================ */
    
    .nav-link {
        position: relative;
        transition: all 0.3s ease;
    }
    
    .nav-link.active {
        background-color: #dbeafe;
        color: #2563eb;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(37, 99, 235, 0.15);
    }
    
    .nav-link.active::before {
        content: '';
        position: absolute;
        bottom: -1px;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #3b82f6, #1d4ed8);
        border-radius: 2px 2px 0 0;
    }
    
    /* Efectos hover mejorados */
    .nav-link:hover:not(.active) {
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    /* Estados de carga */
    .nav-link.loading {
        opacity: 0.6;
        pointer-events: none;
        position: relative;
    }
    
    .nav-link.loading::after {
        content: '';
        position: absolute;
        top: 50%;
        right: 8px;
        width: 12px;
        height: 12px;
        border: 2px solid #e5e7eb;
        border-top: 2px solid #3b82f6;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        transform: translateY(-50%);
    }
    
    @keyframes spin {
        0% { transform: translateY(-50%) rotate(0deg); }
        100% { transform: translateY(-50%) rotate(360deg); }
    }

    /* Overlay de carga personalizado */
    #navigationLoadingOverlay {
        backdrop-filter: blur(4px);
        background: rgba(255, 255, 255, 0.95);
        z-index: 9999;
    }

    /* Animaciones de transición de contenido */
    #main-content {
        transition: opacity 0.3s ease, transform 0.3s ease;
    }

    .fade-out {
        opacity: 0;
        transform: translateY(10px);
    }

    .fade-in {
        opacity: 1;
        transform: translateY(0);
    }

    /* ============================================
       ESTILOS ESPECÍFICOS POR ROL
       ============================================ */

    /* Miembro */
    .nav-link[data-section="dashboard"] {
        border-left: 3px solid #3b82f6;
    }
    
    .nav-link[data-section="backlog"] {
        border-left: 3px solid #10b981;
    }

    /* Scrum Master y Líder */
    .nav-link[data-section="stats"] {
        border-left: 3px solid #8b5cf6;
    }

    /* Admin/Auditor */
    .nav-link[data-section="equipos"] {
        border-left: 3px solid #f59e0b;
    }

    /* ============================================
       RESPONSIVE DESIGN
       ============================================ */

    @media (max-width: 768px) {
        .nav-link {
            font-size: 0.875rem;
            padding: 0.5rem 0.75rem;
        }
        
        .nav-link svg {
            width: 1rem;
            height: 1rem;
        }
        
        #mobileMenu .nav-link {
            border-left: none;
            border-left: 3px solid transparent;
        }
        
        #mobileMenu .nav-link.active {
            border-left-color: #3b82f6;
            background-color: #eff6ff;
        }
    }

    /* ============================================
       INDICADORES DE ESTADO
       ============================================ */

    .nav-link::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 6px;
        height: 6px;
        background: #10b981;
        border-radius: 50%;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .nav-link.has-updates::after {
        opacity: 1;
    }

    /* Tooltip para atajos de teclado */
    .nav-link[data-shortcut]::before {
        content: attr(data-shortcut);
        position: absolute;
        bottom: -25px;
        left: 50%;
        transform: translateX(-50%);
        background: #1f2937;
        color: white;
        padding: 2px 6px;
        border-radius: 4px;
        font-size: 0.75rem;
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.3s ease;
        z-index: 1000;
    }

    .nav-link[data-shortcut]:hover::before {
        opacity: 1;
    }

    /* ============================================
       ACCESSIBILITY IMPROVEMENTS
       ============================================ */

    .nav-link:focus {
        outline: 2px solid #3b82f6;
        outline-offset: 2px;
    }

    .nav-link:focus:not(:focus-visible) {
        outline: none;
    }

    /* Indicador de navegación para lectores de pantalla */
    .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border: 0;
    }
</style>