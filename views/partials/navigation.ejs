<!-- partials/navigation.ejs -->
<nav class="bg-white shadow-lg border-b border-gray-200 sticky top-0 z-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center h-16">
            <!-- Logo y nombre -->
            <div class="flex items-center space-x-3">
                <a href="/dashboard" class="flex items-center space-x-3 hover:opacity-80 transition-opacity">
                    <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-lg flex items-center justify-center shadow-md">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path>
                        </svg>
                    </div>
                    <span class="text-xl font-bold text-gray-900">Dardito</span>
                </a>
            </div>

            <!-- Navegación principal -->
            <div class="hidden md:flex items-center space-x-1">
                <% if (typeof user !== 'undefined' && user) { %>
                    <!-- Dashboard - Todos los roles -->
                    <a href="/dashboard" class="nav-link px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 transition-all duration-200 dashboard-link">
                        <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h4a2 2 0 012 2v2H8V5z"></path>
                        </svg>
                        Dashboard
                    </a>

                    <!-- Navegación para MIEMBRO -->
                    <% if (user.rol === 'miembro') { %>
                        <button class="nav-link px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 transition-all duration-200 backlog-link" data-section="backlog">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                            </svg>
                            Product Backlog
                        </button>
                    <% } %>

                    <!-- Navegación para SCRUM MASTER y LÍDER -->
                    <% if (user.rol === 'scrumMaster' || user.rol === 'lider') { %>
                        <button class="nav-link px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 transition-all duration-200 backlog-link" data-section="backlog">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                            </svg>
                            Product Backlog
                        </button>

                        <button class="nav-link px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-green-600 hover:bg-green-50 transition-all duration-200 metricas-link" data-section="metricas">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                            Métricas
                        </button>
                    <% } %>

                    <!-- Navegación para ADMIN/AUDITOR -->
                    <% if (user.rol === 'auditor') { %>
                        <button class="nav-link px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-purple-600 hover:bg-purple-50 transition-all duration-200 equipo-link" data-equipo="Grupo1">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                            </svg>
                            Equipo 1
                        </button>

                        <button class="nav-link px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-purple-600 hover:bg-purple-50 transition-all duration-200 equipo-link" data-equipo="Grupo2">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                            </svg>
                            Equipo 2
                        </button>

                        <button class="nav-link px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-purple-600 hover:bg-purple-50 transition-all duration-200 equipo-link" data-equipo="Grupo3">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                            </svg>
                            Equipo 3
                        </button>

                        <button class="nav-link px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-purple-600 hover:bg-purple-50 transition-all duration-200 equipo-link" data-equipo="Grupo4">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                            </svg>
                            Equipo 4
                        </button>

                        <button class="nav-link px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-indigo-600 hover:bg-indigo-50 transition-all duration-200 usuarios-link" data-section="usuarios">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm-13 0a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                            </svg>
                            Usuarios
                        </button>
                    <% } %>
                <% } %>
            </div>

            <!-- Usuario y menú móvil -->
            <div class="flex items-center space-x-4">
                <% if (typeof user !== 'undefined' && user) { %>
                    <!-- Información del usuario -->
                    <div class="hidden sm:flex items-center space-x-3">
                        <div class="text-right">
                            <div class="text-sm font-medium text-gray-900"><%= user.nickname %></div>
                            <div class="text-xs text-gray-500 flex items-center">
                                <div class="w-2 h-2 rounded-full mr-1 
                                    <% if (user.rol === 'auditor') { %>bg-green-400<% } %>
                                    <% if (user.rol === 'lider') { %>bg-yellow-400<% } %>
                                    <% if (user.rol === 'scrumMaster') { %>bg-purple-400<% } %>
                                    <% if (user.rol === 'miembro') { %>bg-blue-400<% } %>
                                "></div>
                                <%= user.rol %>
                                <% if (user.grupo && user.grupo !== 'Admin') { %>
                                    | <%= user.grupo %>
                                <% } %>
                            </div>
                        </div>
                        
                        <!-- Avatar -->
                        <div class="w-10 h-10 bg-gradient-to-r from-gray-400 to-gray-600 rounded-full flex items-center justify-center">
                            <span class="text-white font-semibold text-sm">
                                <%= user.nickname.split(' ').map(n => n[0]).join('').substring(0, 2).toUpperCase() %>
                            </span>
                        </div>
                    </div>

                    <!-- Menú de usuario -->
                    <div class="relative group">
                        <button class="p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200">
                            <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 5a2 2 0 100 .01M12 12a2 2 0 100 .01M12 19a2 2 0 100 .01"></path>
                            </svg>
                        </button>
                        <div class="absolute right-0 mt-1 w-56 bg-white rounded-lg shadow-lg border border-gray-200 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
                            <div class="py-1">
                                <!-- Enlaces del menú -->
                                <a href="https://discord.com/invite/QYppQjV5uR" target="_blank" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600">
                                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.04.03-.06c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
                                    </svg>
                                    Discord
                                </a>
                                
                                <div class="border-t border-gray-100 my-1"></div>
                                
                                <!-- Cerrar sesión -->
                                <form method="POST" action="/logout" class="block">
                                    <button type="submit" class="flex items-center w-full px-4 py-2 text-sm text-red-700 hover:bg-red-50 hover:text-red-600 transition-colors">
                                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
                                        </svg>
                                        Cerrar Sesión
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                <% } else { %>
                    <!-- Si no hay usuario logueado -->
                    <a href="/login" class="btn-primary">
                        Iniciar Sesión
                    </a>
                <% } %>

                <!-- Menú móvil -->
                <div class="md:hidden">
                    <button id="mobileMenuBtn" class="p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200">
                        <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Menú móvil expandible -->
        <div id="mobileMenu" class="md:hidden hidden border-t border-gray-200">
            <div class="px-2 pt-2 pb-3 space-y-1">
                <% if (typeof user !== 'undefined' && user) { %>
                    <a href="/dashboard" class="block px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 dashboard-link">Dashboard</a>
                    
                    <!-- Menú móvil para MIEMBRO -->
                    <% if (user.rol === 'miembro') { %>
                        <button class="block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 backlog-link" data-section="backlog">Product Backlog</button>
                    <% } %>

                    <!-- Menú móvil para SCRUM MASTER y LÍDER -->
                    <% if (user.rol === 'scrumMaster' || user.rol === 'lider') { %>
                        <button class="block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 backlog-link" data-section="backlog">Product Backlog</button>
                        <button class="block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-green-600 hover:bg-green-50 metricas-link" data-section="metricas">Métricas</button>
                    <% } %>

                    <!-- Menú móvil para ADMIN/AUDITOR -->
                    <% if (user.rol === 'auditor') { %>
                        <div class="px-3 py-1 text-xs font-semibold text-gray-500 uppercase tracking-wide">Equipos</div>
                        <button class="block w-full text-left px-3 py-2 rounded-lg text-sm text-gray-600 hover:text-purple-600 hover:bg-purple-50 equipo-link" data-equipo="Grupo1">Equipo 1</button>
                        <button class="block w-full text-left px-3 py-2 rounded-lg text-sm text-gray-600 hover:text-purple-600 hover:bg-purple-50 equipo-link" data-equipo="Grupo2">Equipo 2</button>
                        <button class="block w-full text-left px-3 py-2 rounded-lg text-sm text-gray-600 hover:text-purple-600 hover:bg-purple-50 equipo-link" data-equipo="Grupo3">Equipo 3</button>
                        <button class="block w-full text-left px-3 py-2 rounded-lg text-sm text-gray-600 hover:text-purple-600 hover:bg-purple-50 equipo-link" data-equipo="Grupo4">Equipo 4</button>
                        
                        <div class="border-t border-gray-200 mt-2 pt-2">
                            <button class="block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:text-indigo-600 hover:bg-indigo-50 usuarios-link" data-section="usuarios">Gestión de Usuarios</button>
                        </div>
                    <% } %>
                    
                    <div class="border-t border-gray-200 mt-2 pt-2">
                        <form method="POST" action="/logout">
                            <button type="submit" class="block w-full text-left px-3 py-2 rounded-lg text-sm font-medium text-red-700 hover:text-red-600 hover:bg-red-50">
                                Cerrar Sesión
                            </button>
                        </form>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</nav>

<!-- Estilos CSS específicos para la navegación -->
<style>
    .nav-link {
        position: relative;
    }
    
    .nav-link.active {
        background-color: #dbeafe;
        color: #2563eb;
    }
    
    .nav-link.active::before {
        content: '';
        position: absolute;
        bottom: -1px;
        left: 0;
        right: 0;
        height: 2px;
        background-color: #2563eb;
    }
    
    /* Efectos hover mejorados */
    .nav-link:hover {
        transform: translateY(-1px);
    }
    
    /* Indicadores visuales de carga */
    .nav-link.loading {
        opacity: 0.6;
        pointer-events: none;
    }
    
    .nav-link.loading::after {
        content: '';
        position: absolute;
        top: 50%;
        right: 8px;
        width: 12px;
        height: 12px;
        border: 2px solid #e5e7eb;
        border-top: 2px solid #3b82f6;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        transform: translateY(-50%);
    }
    
    @keyframes spin {
        0% { transform: translateY(-50%) rotate(0deg); }
        100% { transform: translateY(-50%) rotate(360deg); }
    }
</style>

<!-- Script para manejar navegación dinámica -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Manejar menú móvil
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const mobileMenu = document.getElementById('mobileMenu');
        
        if (mobileMenuBtn && mobileMenu) {
            mobileMenuBtn.addEventListener('click', function() {
                mobileMenu.classList.toggle('hidden');
            });
            
            // Cerrar menú al hacer clic fuera
            document.addEventListener('click', function(e) {
                if (!mobileMenuBtn.contains(e.target) && !mobileMenu.contains(e.target)) {
                    mobileMenu.classList.add('hidden');
                }
            });
        }

        // ============================================
        // NAVEGACIÓN DINÁMICA - CAMBIO DE CONTENIDO
        // ============================================

        // Función para cargar contenido dinámicamente
        function loadDynamicContent(url, targetContainer = '#main-content') {
            // Mostrar indicador de carga
            const container = document.querySelector(targetContainer);
            if (container) {
                container.innerHTML = `
                    <div class="flex items-center justify-center py-12">
                        <div class="text-center">
                            <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                            <p class="mt-2 text-gray-600">Cargando...</p>
                        </div>
                    </div>
                `;
            }

            // Hacer petición AJAX
            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Error ${response.status}: ${response.statusText}`);
                    }
                    return response.text();
                })
                .then(html => {
                    if (container) {
                        container.innerHTML = html;
                    }
                    // Actualizar URL sin recargar página
                    window.history.pushState({}, '', url);
                })
                .catch(error => {
                    console.error('Error cargando contenido:', error);
                    if (container) {
                        container.innerHTML = `
                            <div class="bg-red-50 border border-red-200 rounded-lg p-4 m-4">
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 text-red-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                    <span class="text-red-800">Error cargando el contenido: ${error.message}</span>
                                </div>
                            </div>
                        `;
                    }
                });
        }

        // Función para marcar elemento activo
        function setActiveNavItem(clickedElement) {
            // Remover clase active de todos los elementos
            document.querySelectorAll('.nav-link').forEach(link => {
                link.classList.remove('active');
            });
            
            // Agregar clase active al elemento clickeado
            clickedElement.classList.add('active');
        }

        // ============================================
        // EVENT LISTENERS PARA NAVEGACIÓN DINÁMICA
        // ============================================

        // Dashboard - Recargar página completa
        document.querySelectorAll('.dashboard-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                setActiveNavItem(this);
                this.classList.add('loading');
                window.location.href = '/dashboard';
            });
        });

        // Product Backlog - Cargar contenido dinámicamente
        document.querySelectorAll('.backlog-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                setActiveNavItem(this);
                this.classList.add('loading');
                
                // Determinar qué backlog cargar según el rol
                if (window.dashboardManager && typeof window.dashboardManager.loadBacklog === 'function') {
                    window.dashboardManager.loadBacklog();
                } else {
                    // Fallback: cargar página completa
                    window.location.href = '/backlog/GenT';
                }
                
                setTimeout(() => {
                    this.classList.remove('loading');
                }, 1000);
            });
        });

        // Métricas - Cargar contenido dinámicamente
        document.querySelectorAll('.metricas-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                setActiveNavItem(this);
                this.classList.add('loading');
                
                // Cargar métricas dinámicamente
                if (window.dashboardManager && typeof window.dashboardManager.loadMetricas === 'function') {
                    window.dashboardManager.loadMetricas();
                } else {
                    // Fallback: cargar página completa
                    window.location.href = '/metricas';
                }
                
                setTimeout(() => {
                    this.classList.remove('loading');
                }, 1000);
            });
        });

        // Equipos (Admin) - Cargar contenido dinámicamente
        document.querySelectorAll('.equipo-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                setActiveNavItem(this);
                this.classList.add('loading');
                
                const equipoId = this.getAttribute('data-equipo');
                
                // Cargar datos del equipo específico
                if (window.dashboardManager && typeof window.dashboardManager.loadEquipo === 'function') {
                    window.dashboardManager.loadEquipo(equipoId);
                } else {
                    // Fallback: usar API directamente
                    loadDynamicContent(`/api/admin/grupos/${equipoId}`);
                }
                
                setTimeout(() => {
                    this.classList.remove('loading');
                }, 1000);
            });
        });

        // Usuarios (Admin) - Cargar contenido dinámicamente
        document.querySelectorAll('.usuarios-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                setActiveNavItem(this);
                this.classList.add('loading');
                
                // Cargar gestión de usuarios
                if (window.dashboardManager && typeof window.dashboardManager.loadUsuarios === 'function') {
                    window.dashboardManager.loadUsuarios();
                } else {
                    // Fallback: cargar página completa
                    window.location.href = '/admin';
                }
                
                setTimeout(() => {
                    this.classList.remove('loading');
                }, 1000);
            });
        });

        // ============================================
        // FUNCIONES AUXILIARES
        // ============================================

        // Manejar navegación con teclas
        document.addEventListener('keydown', function(e) {
            if (e.altKey) {
                switch(e.key) {
                    case 'd':
                        e.preventDefault();
                        document.querySelector('.dashboard-link')?.click();
                        break;
                    case 'b':
                        e.preventDefault();
                        document.querySelector('.backlog-link')?.click();
                        break;
                    case 'm':
                        e.preventDefault();
                        document.querySelector('.metricas-link')?.click();
                        break;
                }
            }
        });

        // Resaltar navegación activa basada en la URL actual
        function highlightCurrentPage() {
            const currentPath = window.location.pathname;
            
            if (currentPath === '/dashboard') {
                document.querySelector('.dashboard-link')?.classList.add('active');
            } else if (currentPath.includes('/backlog')) {
                document.querySelector('.backlog-link')?.classList.add('active');
            } else if (currentPath.includes('/metricas')) {
                document.querySelector('.metricas-link')?.classList.add('active');
            } else if (currentPath.includes('/admin')) {
                document.querySelector('.usuarios-link')?.classList.add('active');
            }
        }

        // Ejecutar al cargar la página
        highlightCurrentPage();
    });

    // ============================================
    // SISTEMA DE NAVEGACIÓN DINÁMICA GLOBAL
    // ============================================
    
    // Objeto global para manejar la navegación dinámica del dashboard
    window.dashboardManager = {
        
        // Cargar sección de Product Backlog
        loadBacklog: function() {
            console.log('🔄 Cargando Product Backlog...');
            
            // Hacer petición a la API para obtener datos del backlog
            fetch('/api/backlog/GenT')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        this.renderBacklog(data.data);
                    } else {
                        throw new Error(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error cargando backlog:', error);
                    this.showError('Error cargando Product Backlog: ' + error.message);
                });
        },

        // Cargar sección de Métricas
        loadMetricas: function() {
            console.log('📊 Cargando Métricas...');
            
            fetch('/api/metricas')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        this.renderMetricas(data.data);
                    } else {
                        throw new Error(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error cargando métricas:', error);
                    this.showError('Error cargando Métricas: ' + error.message);
                });
        },

        // Cargar datos de un equipo específico (Admin)
        loadEquipo: function(equipoId) {
            console.log('👥 Cargando datos del equipo:', equipoId);
            
            fetch(`/api/admin/grupos`)
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.data[equipoId]) {
                        this.renderEquipo(equipoId, data.data[equipoId]);
                    } else {
                        throw new Error(`Equipo ${equipoId} no encontrado`);
                    }
                })
                .catch(error => {
                    console.error('Error cargando equipo:', error);
                    this.showError('Error cargando datos del equipo: ' + error.message);
                });
        },

        // Cargar gestión de usuarios (Admin)
        loadUsuarios: function() {
            console.log('👤 Cargando gestión de usuarios...');
            
            fetch('/api/admin/usuarios')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        this.renderUsuarios(data.data);
                    } else {
                        throw new Error(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error cargando usuarios:', error);
                    this.showError('Error cargando gestión de usuarios: ' + error.message);
                });
        },

        // ============================================
        // FUNCIONES DE RENDERIZADO
        // ============================================

        renderBacklog: function(backlogData) {
            const container = document.getElementById('main-content');
            if (!container) return;

            container.innerHTML = `
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h2 class="text-2xl font-bold text-gray-900 mb-4">Product Backlog</h2>
                    <div class="space-y-4">
                        ${backlogData.map(historia => `
                            <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                                <h3 class="font-semibold text-gray-900">${historia[1]}</h3>
                                <p class="text-gray-600 text-sm mt-1">Como: ${historia[2]}</p>
                                <p class="text-gray-600 text-sm">Quiero: ${historia[3]}</p>
                                <p class="text-gray-600 text-sm">Para: ${historia[4]}</p>
                                <div class="flex justify-between items-center mt-3">
                                    <span class="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded">
                                        ${historia[6]} SP
                                    </span>
                                    <span class="text-xs bg-gray-100 text-gray-800 px-2 py-1 rounded">
                                        ${historia[7]}
                                    </span>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>
            `;
        },

        renderMetricas: function(metricasData) {
            const container = document.getElementById('main-content');
            if (!container) return;

            container.innerHTML = `
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h2 class="text-2xl font-bold text-gray-900 mb-6">Métricas del Equipo</h2>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                        <div class="bg-blue-50 rounded-lg p-4">
                            <h3 class="text-sm font-medium text-blue-600">Story Points Total</h3>
                            <p class="text-2xl font-bold text-blue-900">${metricasData.totalStoryPoints}</p>
                        </div>
                        
                        <div class="bg-green-50 rounded-lg p-4">
                            <h3 class="text-sm font-medium text-green-600">Story Points Completados</h3>
                            <p class="text-2xl font-bold text-green-900">${metricasData.completedStoryPoints}</p>
                        </div>
                        
                        <div class="bg-yellow-50 rounded-lg p-4">
                            <h3 class="text-sm font-medium text-yellow-600">Tareas Total</h3>
                            <p class="text-2xl font-bold text-yellow-900">${metricasData.tareasTotal}</p>
                        </div>
                        
                        <div class="bg-purple-50 rounded-lg p-4">
                            <h3 class="text-sm font-medium text-purple-600">Tareas Completadas</h3>
                            <p class="text-2xl font-bold text-purple-900">${metricasData.tareasCompletadas}</p>
                        </div>
                    </div>
                    
                    <div class="mt-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-3">Velocidad del Equipo</h3>
                        <div class="bg-gray-50 rounded-lg p-4">
                            <p class="text-3xl font-bold text-indigo-600">${metricasData.averageVelocity}</p>
                            <p class="text-sm text-gray-600">Promedio de Story Points por Sprint</p>
                        </div>
                    </div>
                </div>
            `;
        },

        renderEquipo: function(equipoId, equipoData) {
            const container = document.getElementById('main-content');
            if (!container) return;

            const estadoEquipo = equipoData.started === 'y' ? 'Iniciado' : 'No Iniciado';
            const colorEstado = equipoData.started === 'y' ? 'green' : 'red';

            container.innerHTML = `
                <div class="bg-white rounded-lg shadow-md p-6">
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-2xl font-bold text-gray-900">${equipoId}</h2>
                        <span class="px-3 py-1 rounded-full text-sm font-medium bg-${colorEstado}-100 text-${colorEstado}-800">
                            ${estadoEquipo}
                        </span>
                    </div>
                    
                    <!-- Información del equipo -->
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                        <div>
                            <h3 class="text-lg font-semibold text-gray-900 mb-3">Proyectos</h3>
                            ${equipoData.GenT ? `
                                <div class="space-y-2">
                                    <div class="border border-gray-200 rounded-lg p-3">
                                        <h4 class="font-medium">GenT</h4>
                                        <p class="text-sm text-gray-600">Sprint actual: ${equipoData.GenT.sprintActual || 'No iniciado'}</p>
                                    </div>
                                    <div class="border border-gray-200 rounded-lg p-3">
                                        <h4 class="font-medium">Proyecto Principal</h4>
                                        <p class="text-sm text-gray-600">Sprint actual: ${equipoData.Proy?.sprintActual || 'No iniciado'}</p>
                                    </div>
                                    ${equipoData.Proy2 ? `
                                        <div class="border border-gray-200 rounded-lg p-3">
                                            <h4 class="font-medium">Proyecto 2</h4>
                                            <p class="text-sm text-gray-600">Sprint actual: ${equipoData.Proy2.sprintActual || 'No iniciado'}</p>
                                        </div>
                                    ` : ''}
                                </div>
                            ` : '<p class="text-gray-500">No hay proyectos configurados</p>'}
                        </div>
                        
                        <div>
                            <h3 class="text-lg font-semibold text-gray-900 mb-3">Configuración</h3>
                            <div class="space-y-2">
                                <div class="text-sm">
                                    <span class="font-medium text-gray-700">Sprint GenT:</span>
                                    <span class="text-gray-600">${equipoData['duracion-sprint-gent'] || 'No configurado'} semanas</span>
                                </div>
                                <div class="text-sm">
                                    <span class="font-medium text-gray-700">Sprint Proyecto:</span>
                                    <span class="text-gray-600">${equipoData['duracion-sprint-proyecto'] || 'No configurado'} semanas</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        },

        renderUsuarios: function(usuariosData) {
            const container = document.getElementById('main-content');
            if (!container) return;

            const usuarios = Object.entries(usuariosData);

            container.innerHTML = `
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h2 class="text-2xl font-bold text-gray-900 mb-6">Gestión de Usuarios</h2>
                    
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Usuario</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rol</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Grupo</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estadísticas</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                ${usuarios.map(([userId, userData]) => `
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="flex items-center">
                                                <div class="w-8 h-8 bg-gradient-to-r from-gray-400 to-gray-600 rounded-full flex items-center justify-center mr-3">
                                                    <span class="text-white font-semibold text-xs">
                                                        ${userData.nickname.split(' ').map(n => n[0]).join('').substring(0, 2).toUpperCase()}
                                                    </span>
                                                </div>
                                                <div>
                                                    <div class="text-sm font-medium text-gray-900">${userData.nickname}</div>
                                                    <div class="text-sm text-gray-500">ID: ${userId}</div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full
                                                ${userData.rol === 'auditor' ? 'bg-purple-100 text-purple-800' : ''}
                                                ${userData.rol === 'lider' ? 'bg-blue-100 text-blue-800' : ''}
                                                ${userData.rol === 'scrumMaster' ? 'bg-green-100 text-green-800' : ''}
                                                ${userData.rol === 'miembro' ? 'bg-yellow-100 text-yellow-800' : ''}
                                            ">
                                                ${userData.rol}
                                            </span>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${userData.grupo}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                            <div>Llamadas: ${userData.stats[0]}s</div>
                                            <div>Tareas: ${userData.stats[2]}/${userData.stats[1]}</div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                            <button class="text-indigo-600 hover:text-indigo-900 mr-3" onclick="editUser('${userId}')">
                                                Editar
                                            </button>
                                            <button class="text-red-600 hover:text-red-900" onclick="resetUserToken('${userId}')">
                                                Reset Token
                                            </button>
                                        </td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    </div>
                </div>
            `;
        },

        // Mostrar mensaje de error
        showError: function(message) {
            const container = document.getElementById('main-content');
            if (container) {
                container.innerHTML = `
                    <div class="bg-red-50 border border-red-200 rounded-lg p-4">
                        <div class="flex items-center">
                            <svg class="w-5 h-5 text-red-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span class="text-red-800">${message}</span>
                        </div>
                    </div>
                `;
            }
        },

        // Actualizar contenido específico sin recargar toda la página
        updateContent: function(selector, content) {
            const element = document.querySelector(selector);
            if (element) {
                element.innerHTML = content;
            }
        }
    };
</script>