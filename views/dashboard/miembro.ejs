<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Miembro - Dardito</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-900 text-gray-100 min-h-screen">
    <!-- Header medio feo pero funcional -->
    <header class="bg-gray-800 border-b-2 border-gray-700 p-4">
        <div class="container mx-auto flex justify-between items-center">
            <div>
                <h1 class="text-xl font-bold text-blue-400">Dashboard Miembro</h1>
                <p class="text-sm text-gray-300">
                    <span class="font-semibold"><%= user.nickname %></span> - 
                    <span class="bg-gray-700 px-2 py-1 rounded text-xs"><%= user.rol %></span> - 
                    <span class="bg-blue-700 px-2 py-1 rounded text-xs"><%= grupo %></span>
                </p>
            </div>
            <button onclick="window.location.href='/logout'" class="bg-red-600 hover:bg-red-700 px-4 py-2 rounded text-sm border border-red-500">
                Salir
            </button>
        </div>
    </header>

    <div class="container mx-auto px-4 py-6">
        <!-- Navegaci√≥n de proyectos medio pelada -->
        <div class="mb-6">
            <div class="flex gap-2 flex-wrap">
                <button onclick="cambiarProyecto('GenT')" id="btn-GenT" class="bg-purple-700 hover:bg-purple-800 px-4 py-2 rounded border border-purple-600 text-sm font-semibold">
                    Generaci√≥n T
                </button>
                <button onclick="cambiarProyecto('Proy')" id="btn-Proy" class="bg-blue-700 hover:bg-blue-800 px-4 py-2 rounded border border-blue-600 text-sm font-semibold">
                    Proyecto
                </button>
                <% if (datos.Proy2) { %>
                <button onclick="cambiarProyecto('Proy2')" id="btn-Proy2" class="bg-green-700 hover:bg-green-800 px-4 py-2 rounded border border-green-600 text-sm font-semibold">
                    Proyecto 2
                </button>
                <% } %>
            </div>
        </div>

        <!-- Contenedor principal medio desordenado -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            
            <!-- Panel de tareas asignadas -->
            <div class="lg:col-span-2">
                <div class="bg-gray-800 rounded-lg p-4 border border-gray-700">
                    <h2 class="text-lg font-semibold mb-4 text-yellow-400">
                        Mis Tareas Asignadas
                        <span id="proyecto-actual" class="text-sm text-gray-400">(GenT)</span>
                    </h2>
                    
                    <div id="mis-tareas" class="space-y-3">
                        <!-- Las tareas se cargan din√°micamente -->
                        <div class="text-center py-8 text-gray-500">
                            <div class="text-4xl mb-2">üìù</div>
                            <p>Cargando tareas...</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Panel lateral medio pelado -->
            <div class="space-y-4">
                
                <!-- Info del sprint -->
                <div class="bg-gray-800 rounded-lg p-4 border border-gray-700">
                    <h3 class="font-semibold mb-3 text-green-400">Sprint Actual</h3>
                    <div id="sprint-info" class="text-sm space-y-2">
                        <p>Sprint: <span id="sprint-numero">-</span></p>
                        <p>Inicio: <span id="sprint-inicio">-</span></p>
                        <p>Fin: <span id="sprint-fin">-</span></p>
                    </div>
                </div>

                <!-- Navegaci√≥n de sprints -->
                <div class="bg-gray-800 rounded-lg p-4 border border-gray-700">
                    <h3 class="font-semibold mb-3 text-blue-400">Ver Sprints</h3>
                    <div id="botones-sprints" class="grid grid-cols-2 gap-2">
                        <!-- Se llenan din√°micamente -->
                    </div>
                </div>

                <!-- Product Backlog -->
                <div class="bg-gray-800 rounded-lg p-4 border border-gray-700">
                    <h3 class="font-semibold mb-3 text-purple-400">Product Backlog</h3>
                    <div id="product-backlog" class="space-y-2 max-h-48 overflow-y-auto">
                        <!-- Se llena din√°micamente -->
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- Modal para cambiar estado de tarea (medio feo) -->
    <div id="modal-estado" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-gray-800 rounded-lg p-6 border border-gray-600 max-w-md w-full mx-4">
            <h3 class="text-lg font-semibold mb-4">Cambiar Estado de Tarea</h3>
            <div id="modal-content" class="mb-4">
                <!-- Contenido din√°mico -->
            </div>
            <div class="flex gap-2">
                <button id="btn-confirmar" class="flex-1 bg-green-600 hover:bg-green-700 px-4 py-2 rounded">
                    ‚úÖ Confirmar
                </button>
                <button onclick="cerrarModal()" class="bg-gray-600 hover:bg-gray-700 px-4 py-2 rounded">
                    ‚ùå Cancelar
                </button>
            </div>
        </div>
    </div>

    <script>
        let proyectoActual = 'GenT';
        let sprintActual = '1';

        // Cambiar proyecto
        function cambiarProyecto(proyecto) {
            proyectoActual = proyecto;
            document.getElementById('proyecto-actual').textContent = `(${proyecto})`;
            
            // Actualizar botones
            document.querySelectorAll('[id^="btn-"]').forEach(btn => {
                btn.classList.remove('bg-yellow-600');
                btn.classList.add('bg-gray-700');
            });
            document.getElementById(`btn-${proyecto}`).classList.add('bg-yellow-600');
            
            cargarDatos();
        }

        // Cargar datos del proyecto/sprint
        async function cargarDatos() {
            try {
                await Promise.all([
                    cargarTareas(),
                    cargarSprintInfo(),
                    cargarProductBacklog(),
                    cargarBotonesSprints()
                ]);
            } catch (error) {
                console.error('Error cargando datos:', error);
            }
        }

        // Cargar tareas
        async function cargarTareas() {
            try {
                const response = await fetch(`/api/tareas/<%= grupo %>/${proyectoActual}/${sprintActual}`);
                const data = await response.json();
                
                const container = document.getElementById('mis-tareas');
                
                if (Object.keys(data.tareas).length === 0) {
                    container.innerHTML = `
                        <div class="text-center py-8 text-gray-500">
                            <div class="text-4xl mb-2">üò¥</div>
                            <p>No tienes tareas asignadas en este sprint</p>
                        </div>
                    `;
                    return;
                }
                
                container.innerHTML = Object.entries(data.tareas).map(([id, tarea]) => {
                    const [estado, descripcion, asignados, prioridad, fechaLimite] = tarea;
                    const estadoColor = {
                        'POR_HACER': 'bg-gray-600',
                        'EN_PROCESO': 'bg-yellow-600',
                        'COMPLETADO': 'bg-green-600',
                        'VERIFICADO': 'bg-blue-600'
                    };
                    
                    return `
                        <div class="bg-yellow-900 border-2 border-yellow-600 rounded-lg p-4">
                            <div class="flex justify-between items-start mb-2">
                                <h4 class="font-semibold text-yellow-100">${descripcion}</h4>
                                <span class="${estadoColor[estado] || 'bg-gray-600'} px-2 py-1 rounded text-xs">
                                    ${estado}
                                </span>
                            </div>
                            <p class="text-sm text-yellow-200 mb-3">
                                ${asignados.join(', ')} | 
                                ${prioridad} | 
                                ${fechaLimite}
                            </p>
                            ${estado === 'POR_HACER' || estado === 'EN_PROCESO' ? `
                                <div class="flex gap-2">
                                    ${estado === 'POR_HACER' ? `
                                        <button onclick="cambiarEstadoTarea('${id}', 'EN_PROCESO')" 
                                                class="bg-yellow-600 hover:bg-yellow-700 px-3 py-1 rounded text-sm">
                                            ‚ñ∂Ô∏è Iniciar
                                        </button>
                                    ` : ''}
                                    ${estado === 'EN_PROCESO' ? `
                                        <button onclick="cambiarEstadoTarea('${id}', 'COMPLETADO')" 
                                                class="bg-green-600 hover:bg-green-700 px-3 py-1 rounded text-sm">
                                            ‚úÖ Completar
                                        </button>
                                    ` : ''}
                                </div>
                            ` : ''}
                        </div>
                    `;
                }).join('');
                
            } catch (error) {
                document.getElementById('mis-tareas').innerHTML = `
                    <div class="text-red-400 p-4 bg-red-900 rounded">
                        ‚ùå Error cargando tareas
                    </div>
                `;
            }
        }

        // Cargar info del sprint
        async function cargarSprintInfo() {
            try {
                const response = await fetch(`/api/sprint/<%= grupo %>/${proyectoActual}/${sprintActual}`);
                const data = await response.json();
                
                document.getElementById('sprint-numero').textContent = sprintActual;
                document.getElementById('sprint-inicio').textContent = data.fechaIni.join('/');
                document.getElementById('sprint-fin').textContent = data.fechaFin.join('/');
                
            } catch (error) {
                console.error('Error cargando sprint info:', error);
            }
        }

        // Cargar product backlog
        async function cargarProductBacklog() {
            try {
                const response = await fetch(`/api/product-backlog/<%= grupo %>/${proyectoActual}`);
                const data = await response.json();
                
                const container = document.getElementById('product-backlog');
                
                if (!data.productBacklog || data.productBacklog.length === 0) {
                    container.innerHTML = '<p class="text-gray-500 text-sm">No hay historias</p>';
                    return;
                }
                
                container.innerHTML = data.productBacklog.map(historia => {
                    const [id, como, quiero, para, criterio, prioridad, points, estado] = historia;
                    return `
                        <div class="bg-gray-700 p-2 rounded text-sm">
                            <p class="font-semibold">${quiero}</p>
                            <p class="text-xs text-gray-400">üéØ ${points} pts | ${estado}</p>
                        </div>
                    `;
                }).join('');
                
            } catch (error) {
                document.getElementById('product-backlog').innerHTML = `
                    <p class="text-red-400 text-sm">‚ùå Error cargando</p>
                `;
            }
        }

        // Cargar botones de sprints
        async function cargarBotonesSprints() {
            // Por ahora solo mostrar el sprint actual, despu√©s se puede mejorar
            document.getElementById('botones-sprints').innerHTML = `
                <button onclick="cambiarSprint('1')" 
                        class="bg-blue-600 hover:bg-blue-700 px-2 py-1 rounded text-sm ${sprintActual === '1' ? 'ring-2 ring-yellow-500' : ''}">
                    Sprint 1
                </button>
            `;
        }

        // Cambiar estado de tarea
        function cambiarEstadoTarea(tareaId, nuevoEstado) {
            const modal = document.getElementById('modal-estado');
            const content = document.getElementById('modal-content');
            
            content.innerHTML = `
                <p class="mb-4">¬øCambiar estado a <strong>${nuevoEstado}</strong>?</p>
            `;
            
            document.getElementById('btn-confirmar').onclick = () => confirmarCambioEstado(tareaId, nuevoEstado);
            modal.classList.remove('hidden');
            modal.classList.add('flex');
        }

        // Confirmar cambio de estado
        async function confirmarCambioEstado(tareaId, nuevoEstado) {
            try {
                const response = await fetch(`/api/tareas/<%= grupo %>/${proyectoActual}/${tareaId}/estado`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ estado: nuevoEstado })
                });
                
                if (response.ok) {
                    cerrarModal();
                    cargarTareas(); // Recargar tareas
                } else {
                    alert('‚ùå Error cambiando estado');
                }
            } catch (error) {
                alert('‚ùå Error de conexi√≥n');
            }
        }

        // Cerrar modal
        function cerrarModal() {
            document.getElementById('modal-estado').classList.add('hidden');
            document.getElementById('modal-estado').classList.remove('flex');
        }

        // Cambiar sprint (funci√≥n b√°sica)
        function cambiarSprint(sprint) {
            sprintActual = sprint;
            cargarDatos();
        }

        // Cargar datos inicial
        document.addEventListener('DOMContentLoaded', () => {
            cargarDatos();
        });
    </script>
</body>
</html>