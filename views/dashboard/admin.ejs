<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Admin - Dardito</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-900 text-gray-100 min-h-screen">
    <!-- Header medio feo pero funcional -->
    <header class="bg-gray-800 border-b-2 border-red-700 p-4">
        <div class="container mx-auto flex justify-between items-center">
            <div>
                <h1 class="text-xl font-bold text-red-400">üõ°Ô∏è Dashboard Administrador</h1>
                <p class="text-sm text-gray-300">
                    üë§ <span class="font-semibold"><%= user.nickname %></span> - 
                    üè∑Ô∏è <span class="bg-red-700 px-2 py-1 rounded text-xs"><%= user.rol %></span> - 
                    üåê <span class="bg-purple-700 px-2 py-1 rounded text-xs">Vista Global</span>
                </p>
            </div>
            <button onclick="window.location.href='/logout'" class="bg-red-600 hover:bg-red-700 px-4 py-2 rounded text-sm border border-red-500">
                üö™ Salir
            </button>
        </div>
    </header>

    <div class="container mx-auto px-4 py-6">
        <!-- Navegaci√≥n principal -->
        <div class="mb-6">
            <div class="flex gap-2 flex-wrap">
                <button onclick="cambiarVista('estadisticas')" id="btn-estadisticas" class="bg-yellow-700 hover:bg-yellow-800 px-4 py-2 rounded border border-yellow-600 text-sm font-semibold">
                    üìä Estad√≠sticas Globales
                </button>
                <button onclick="cambiarVista('usuarios')" id="btn-usuarios" class="bg-blue-700 hover:bg-blue-800 px-4 py-2 rounded border border-blue-600 text-sm font-semibold">
                    üë• Gesti√≥n Usuarios
                </button>
                <button onclick="cambiarVista('equipos')" id="btn-equipos" class="bg-purple-700 hover:bg-purple-800 px-4 py-2 rounded border border-purple-600 text-sm font-semibold">
                    üèÜ Equipos
                </button>
                <button onclick="cambiarVista('proyectos')" id="btn-proyectos" class="bg-green-700 hover:bg-green-800 px-4 py-2 rounded border border-green-600 text-sm font-semibold">
                    üìã Todos los Proyectos
                </button>
            </div>
        </div>

        <!-- Vista: Estad√≠sticas Globales -->
        <div id="vista-estadisticas" class="vista-admin">
            <div class="bg-gray-800 rounded-lg p-6 border border-gray-700 mb-6">
                <h2 class="text-lg font-semibold mb-4 text-yellow-400">üìä Estad√≠sticas Globales del Sistema</h2>
                
                <!-- Resumen general -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                    <div class="bg-blue-900 p-4 rounded border border-blue-700 text-center">
                        <h3 class="font-semibold text-blue-300">üè¢ Equipos</h3>
                        <p class="text-2xl font-bold" id="total-equipos">-</p>
                        <p class="text-sm text-blue-200">Activos</p>
                    </div>
                    <div class="bg-green-900 p-4 rounded border border-green-700 text-center">
                        <h3 class="font-semibold text-green-300">üë• Usuarios</h3>
                        <p class="text-2xl font-bold" id="total-usuarios">-</p>
                        <p class="text-sm text-green-200">Registrados</p>
                    </div>
                    <div class="bg-purple-900 p-4 rounded border border-purple-700 text-center">
                        <h3 class="font-semibold text-purple-300">üìà Proyectos</h3>
                        <p class="text-2xl font-bold" id="total-proyectos">-</p>
                        <p class="text-sm text-purple-200">Iniciados</p>
                    </div>
                    <div class="bg-red-900 p-4 rounded border border-red-700 text-center">
                        <h3 class="font-semibold text-red-300">‚ö° Promedio</h3>
                        <p class="text-2xl font-bold" id="promedio-completado">-%</p>
                        <p class="text-sm text-red-200">Completado</p>
                    </div>
                </div>

                <!-- Estad√≠sticas detalladas por equipo -->
                <div class="bg-gray-700 rounded-lg p-4">
                    <h3 class="font-semibold mb-4 text-gray-300">üìã Estado por Equipos</h3>
                    <div id="estadisticas-equipos" class="space-y-4">
                        <!-- Se llena din√°micamente -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Vista: Gesti√≥n de Usuarios -->
        <div id="vista-usuarios" class="vista-admin hidden">
            <div class="bg-gray-800 rounded-lg p-6 border border-gray-700">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-lg font-semibold text-blue-400">üë• Gesti√≥n de Usuarios</h2>
                    <div class="flex gap-2">
                        <select id="filtro-grupo" class="bg-gray-700 border border-gray-600 rounded px-3 py-1 text-sm">
                            <option value="">Todos los grupos</option>
                            <option value="Grupo1">Grupo 1</option>
                            <option value="Grupo2">Grupo 2</option>
                            <option value="Grupo3">Grupo 3</option>
                            <option value="Grupo4">Grupo 4</option>
                            <option value="Admin">Admin</option>
                        </select>
                        <select id="filtro-rol" class="bg-gray-700 border border-gray-600 rounded px-3 py-1 text-sm">
                            <option value="">Todos los roles</option>
                            <option value="miembro">Miembro</option>
                            <option value="scrumMaster">Scrum Master</option>
                            <option value="lider">L√≠der</option>
                            <option value="admin">Admin</option>
                            <option value="auditor">Auditor</option>
                        </select>
                    </div>
                </div>
                
                <!-- Tabla de usuarios medio pelada -->
                <div class="overflow-x-auto">
                    <table class="w-full text-sm">
                        <thead class="bg-gray-700">
                            <tr>
                                <th class="px-4 py-2 text-left">Usuario</th>
                                <th class="px-4 py-2 text-left">Rol</th>
                                <th class="px-4 py-2 text-left">Grupo</th>
                                <th class="px-4 py-2 text-left">Estad√≠sticas</th>
                                <th class="px-4 py-2 text-left">Acciones</th>
                            </tr>
                        </thead>
                        <tbody id="tabla-usuarios" class="divide-y divide-gray-700">
                            <!-- Se llena din√°micamente -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Vista: Equipos -->
        <div id="vista-equipos" class="vista-admin hidden">
            <div class="bg-gray-800 rounded-lg p-6 border border-gray-700">
                <h2 class="text-lg font-semibold mb-4 text-purple-400">üèÜ Informaci√≥n Completa de Equipos</h2>
                
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                    <div class="space-y-4" id="equipos-izquierda">
                        <!-- Equipos 1 y 2 -->
                    </div>
                    <div class="space-y-4" id="equipos-derecha">
                        <!-- Equipos 3 y 4 -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Vista: Todos los Proyectos -->
        <div id="vista-proyectos" class="vista-admin hidden">
            <div class="bg-gray-800 rounded-lg p-6 border border-gray-700 mb-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-lg font-semibold text-green-400">üìã Vista Global de Proyectos</h2>
                    <div class="flex gap-2">
                        <select id="proyecto-selector" class="bg-gray-700 border border-gray-600 rounded px-3 py-1 text-sm">
                            <option value="GenT">Generaci√≥n T</option>
                            <option value="Proy">Proyecto</option>
                            <option value="Proy2">Proyecto 2</option>
                        </select>
                        <select id="equipo-selector" class="bg-gray-700 border border-gray-600 rounded px-3 py-1 text-sm">
                            <option value="">Todos los equipos</option>
                            <option value="Grupo1">Grupo 1</option>
                            <option value="Grupo2">Grupo 2</option>
                            <option value="Grupo3">Grupo 3</option>
                            <option value="Grupo4">Grupo 4</option>
                        </select>
                    </div>
                </div>
                
                <div id="proyectos-grid" class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <!-- Se llena din√°micamente -->
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para cambiar grupo de usuario -->
    <div id="modal-cambiar-grupo" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-gray-800 rounded-lg p-6 border border-gray-600 max-w-md w-full mx-4">
            <h3 class="text-lg font-semibold mb-4">üë• Cambiar Usuario de Grupo</h3>
            <div class="mb-4">
                <p id="usuario-cambio-info" class="text-gray-300 mb-3"></p>
                <label class="block text-sm font-medium mb-2">Nuevo grupo:</label>
                <select id="nuevo-grupo" class="w-full p-2 bg-gray-700 border border-gray-600 rounded text-white">
                    <option value="Grupo1">Grupo 1</option>
                    <option value="Grupo2">Grupo 2</option>
                    <option value="Grupo3">Grupo 3</option>
                    <option value="Grupo4">Grupo 4</option>
                    <option value="Admin">Admin</option>
                </select>
            </div>
            <div class="flex gap-2">
                <button id="btn-confirmar-cambio" class="flex-1 bg-green-600 hover:bg-green-700 px-4 py-2 rounded">
                    ‚úÖ Cambiar Grupo
                </button>
                <button onclick="cerrarModal('modal-cambiar-grupo')" class="bg-gray-600 hover:bg-gray-700 px-4 py-2 rounded">
                    ‚ùå Cancelar
                </button>
            </div>
        </div>
    </div>

    <script>
        let vistaActual = 'estadisticas';
        let datosGlobales = {};

        // Cambiar vista principal
        function cambiarVista(vista) {
            vistaActual = vista;
            
            // Ocultar todas las vistas
            document.querySelectorAll('.vista-admin').forEach(v => v.classList.add('hidden'));
            
            // Mostrar vista seleccionada
            document.getElementById(`vista-${vista}`).classList.remove('hidden');
            
            // Actualizar botones
            document.querySelectorAll('[id^="btn-"]').forEach(btn => {
                btn.classList.remove('bg-yellow-600');
                btn.classList.add('bg-gray-700');
            });
            document.getElementById(`btn-${vista}`).classList.add('bg-yellow-600');
            
            // Cargar datos seg√∫n la vista
            cargarVista(vista);
        }

        // Cargar datos seg√∫n la vista activa
        async function cargarVista(vista) {
            switch(vista) {
                case 'estadisticas':
                    await cargarEstadisticasGlobales();
                    break;
                case 'usuarios':
                    await cargarUsuarios();
                    break;
                case 'equipos':
                    await cargarEquipos();
                    break;
                case 'proyectos':
                    await cargarTodosLosProyectos();
                    break;
            }
        }

        // Cargar estad√≠sticas globales
        async function cargarEstadisticasGlobales() {
            try {
                const response = await fetch('/api/estadisticas/global');
                const data = await response.json();
                datosGlobales = data;
                
                // Calcular totales
                const equipos = Object.keys(data);
                const equiposIniciados = equipos.filter(eq => data[eq].iniciado).length;
                
                document.getElementById('total-equipos').textContent = equiposIniciados;
                document.getElementById('total-usuarios').textContent = '<%= Object.keys(usuarios || {}).length %>'; // Del servidor
                
                let totalProyectos = 0;
                let promedioGeneral = 0;
                let contador = 0;
                
                equipos.forEach(equipo => {
                    if (data[equipo].iniciado) {
                        Object.keys(data[equipo].proyectos).forEach(proyecto => {
                            totalProyectos++;
                            promedioGeneral += data[equipo].proyectos[proyecto].porcentajeCompletado;
                            contador++;
                        });
                    }
                });
                
                document.getElementById('total-proyectos').textContent = totalProyectos;
                document.getElementById('promedio-completado').textContent = contador > 0 ? Math.round(promedioGeneral / contador) : 0;
                
                // Mostrar estad√≠sticas por equipo
                const container = document.getElementById('estadisticas-equipos');
                container.innerHTML = equipos.map(equipo => {
                    if (!data[equipo].iniciado) {
                        return `
                            <div class="bg-gray-600 p-4 rounded border border-gray-500">
                                <h4 class="font-semibold text-gray-300">${equipo}</h4>
                                <p class="text-yellow-300">‚è≥ Proyecto no iniciado</p>
                            </div>
                        `;
                    }
                    
                    const proyectos = data[equipo].proyectos;
                    return `
                        <div class="bg-gray-600 p-4 rounded border border-gray-500">
                            <h4 class="font-semibold text-white mb-3">${equipo}</h4>
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
                                ${Object.entries(proyectos).map(([nombreProy, dataProy]) => `
                                    <div class="bg-gray-700 p-3 rounded">
                                        <p class="font-medium text-sm">${nombreProy}</p>
                                        <p class="text-lg font-bold">${dataProy.porcentajeCompletado}%</p>
                                        <p class="text-xs text-gray-400">Sprint ${dataProy.sprintActual}</p>
                                        <p class="text-xs text-gray-400">${dataProy.tareasCompletadas}/${dataProy.totalTareas} tareas</p>
                                    </div>
                                `).join('')}
                            </div>
                        </div>
                    `;
                }).join('');
                
            } catch (error) {
                console.error('Error cargando estad√≠sticas globales:', error);
            }
        }

        // Cargar usuarios
        async function cargarUsuarios() {
            try {
                const response = await fetch('/api/admin/usuarios');
                const usuarios = await response.json();
                
                mostrarUsuarios(usuarios);
                
                // Event listeners para filtros
                document.getElementById('filtro-grupo').addEventListener('change', () => filtrarUsuarios(usuarios));
                document.getElementById('filtro-rol').addEventListener('change', () => filtrarUsuarios(usuarios));
                
            } catch (error) {
                console.error('Error cargando usuarios:', error);
                document.getElementById('tabla-usuarios').innerHTML = `
                    <tr><td colspan="5" class="text-center text-red-400 py-4">‚ùå Error cargando usuarios</td></tr>
                `;
            }
        }

        // Mostrar usuarios en tabla
        function mostrarUsuarios(usuarios) {
            const tbody = document.getElementById('tabla-usuarios');
            
            tbody.innerHTML = usuarios.map(usuario => {
                const [tiempoLlamada, tareasAsignadas, tareasCompletadas] = usuario.stats;
                
                return `
                    <tr class="hover:bg-gray-700">
                        <td class="px-4 py-3">
                            <div>
                                <p class="font-medium">${usuario.nickname}</p>
                                <p class="text-xs text-gray-400">${usuario.id}</p>
                            </div>
                        </td>
                        <td class="px-4 py-3">
                            <span class="px-2 py-1 rounded text-xs ${obtenerColorRol(usuario.rol)}">
                                ${usuario.rol}
                            </span>
                        </td>
                        <td class="px-4 py-3">
                            <span class="px-2 py-1 rounded text-xs bg-blue-700">
                                ${usuario.grupo}
                            </span>
                        </td>
                        <td class="px-4 py-3">
                            <div class="text-xs">
                                <p>‚è±Ô∏è ${Math.floor(tiempoLlamada / 60)}min</p>
                                <p>‚úÖ ${tareasCompletadas}/${tareasAsignadas}</p>
                            </div>
                        </td>
                        <td class="px-4 py-3">
                            <button onclick="abrirCambioGrupo('${usuario.id}', '${usuario.nickname}', '${usuario.grupo}')" 
                                    class="bg-purple-600 hover:bg-purple-700 px-2 py-1 rounded text-xs">
                                üîÑ Cambiar Grupo
                            </button>
                        </td>
                    </tr>
                `;
            }).join('');
        }

        // Filtrar usuarios
        function filtrarUsuarios(usuariosOriginales) {
            const grupoFiltro = document.getElementById('filtro-grupo').value;
            const rolFiltro = document.getElementById('filtro-rol').value;
            
            let usuariosFiltrados = usuariosOriginales;
            
            if (grupoFiltro) {
                usuariosFiltrados = usuariosFiltrados.filter(u => u.grupo === grupoFiltro);
            }
            
            if (rolFiltro) {
                usuariosFiltrados = usuariosFiltrados.filter(u => u.rol === rolFiltro);
            }
            
            mostrarUsuarios(usuariosFiltrados);
        }

        // Obtener color para rol
        function obtenerColorRol(rol) {
            const colores = {
                'miembro': 'bg-gray-600',
                'scrumMaster': 'bg-purple-600',
                'lider': 'bg-red-600',
                'admin': 'bg-orange-600',
                'auditor': 'bg-indigo-600'
            };
            return colores[rol] || 'bg-gray-600';
        }

        // Cargar equipos
        async function cargarEquipos() {
            try {
                const response = await fetch('/api/admin/equipos');
                const equipos = await response.json();
                
                const gruposIzquierda = ['Grupo1', 'Grupo2'];
                const gruposDerecha = ['Grupo3', 'Grupo4'];
                
                document.getElementById('equipos-izquierda').innerHTML = gruposIzquierda.map(grupo => 
                    generarTarjetaEquipo(grupo, equipos[grupo] || {})
                ).join('');
                
                document.getElementById('equipos-derecha').innerHTML = gruposDerecha.map(grupo => 
                    generarTarjetaEquipo(grupo, equipos[grupo] || {})
                ).join('');
                
            } catch (error) {
                console.error('Error cargando equipos:', error);
            }
        }

        // Generar tarjeta de equipo
        function generarTarjetaEquipo(nombreGrupo, datosGrupo) {
            if (!datosGrupo.iniciado) {
                return `
                    <div class="bg-gray-700 border border-gray-600 rounded-lg p-4">
                        <h3 class="font-semibold text-lg mb-3">${nombreGrupo}</h3>
                        <div class="text-center py-6">
                            <div class="text-4xl mb-2">‚è≥</div>
                            <p class="text-yellow-300">Proyecto no iniciado</p>
                        </div>
                        <div class="mt-4">
                            <h4 class="font-medium mb-2">Miembros:</h4>
                            <div class="space-y-1">
                                ${(datosGrupo.miembros || []).map(miembro => `
                                    <div class="text-sm bg-gray-600 p-2 rounded">
                                        <span class="font-medium">${miembro.nickname}</span>
                                        <span class="text-gray-400 ml-2">(${miembro.rol})</span>
                                    </div>
                                `).join('')}
                            </div>
                        </div>
                    </div>
                `;
            }

            return `
                <div class="bg-gray-700 border border-gray-600 rounded-lg p-4">
                    <h3 class="font-semibold text-lg mb-3">${nombreGrupo}</h3>
                    
                    <!-- Proyectos del equipo -->
                    <div class="mb-4">
                        <h4 class="font-medium mb-2">üìä Proyectos:</h4>
                        <div class="space-y-2">
                            ${Object.entries(datosGrupo.proyectos || {}).map(([proyecto, datos]) => `
                                <div class="bg-gray-600 p-2 rounded text-sm">
                                    <div class="flex justify-between items-center">
                                        <span class="font-medium">${proyecto}</span>
                                        <span class="text-xs bg-blue-600 px-2 py-1 rounded">Sprint ${datos.sprintActual || '?'}</span>
                                    </div>
                                    <div class="mt-1">
                                        <div class="flex justify-between text-xs">
                                            <span>Historias: ${datos.historiasEnSprint || 0}/${datos.totalHistorias || 0}</span>
                                            <span>Tareas: ${datos.tareasCompletadas || 0}/${datos.totalTareas || 0}</span>
                                        </div>
                                        <div class="w-full bg-gray-500 rounded-full h-1 mt-1">
                                            <div class="bg-green-500 h-1 rounded-full" style="width: ${datos.porcentajeCompletado || 0}%"></div>
                                        </div>
                                        <p class="text-xs text-gray-400 mt-1">${datos.porcentajeCompletado || 0}% completado</p>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                    
                    <!-- Miembros del equipo -->
                    <div>
                        <h4 class="font-medium mb-2">üë• Miembros:</h4>
                        <div class="space-y-1">
                            ${(datosGrupo.miembros || []).map(miembro => `
                                <div class="text-sm bg-gray-600 p-2 rounded flex justify-between items-center">
                                    <div>
                                        <span class="font-medium">${miembro.nickname}</span>
                                        <span class="text-xs px-1 py-0.5 rounded ml-2 ${obtenerColorRol(miembro.rol)}">${miembro.rol}</span>
                                    </div>
                                    <button onclick="abrirCambioGrupo('${miembro.id}', '${miembro.nickname}', '${nombreGrupo}')" 
                                            class="bg-purple-600 hover:bg-purple-700 px-2 py-1 rounded text-xs">
                                        üîÑ
                                    </button>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                    
                    ${(datosGrupo.miembros || []).length === 0 ? '<p class="text-gray-400 text-sm mt-2">No hay miembros asignados</p>' : ''}
                </div>
            `;
        }

        // Cargar todos los proyectos
        async function cargarTodosLosProyectos() {
            const proyectoSeleccionado = document.getElementById('proyecto-selector').value;
            const equipoSeleccionado = document.getElementById('equipo-selector').value;
            
            try {
                const response = await fetch('/api/admin/equipos');
                const equipos = await response.json();
                
                const container = document.getElementById('proyectos-grid');
                let proyectosMostrados = [];
                
                Object.entries(equipos).forEach(([nombreEquipo, datosEquipo]) => {
                    // Filtrar por equipo si est√° seleccionado
                    if (equipoSeleccionado && nombreEquipo !== equipoSeleccionado) {
                        return;
                    }
                    
                    // Solo mostrar equipos iniciados
                    if (!datosEquipo.iniciado) {
                        return;
                    }
                    
                    // Buscar el proyecto espec√≠fico o mostrar todos
                    const proyectos = datosEquipo.proyectos || {};
                    Object.entries(proyectos).forEach(([nombreProyecto, datosProyecto]) => {
                        if (proyectoSeleccionado && nombreProyecto !== proyectoSeleccionado) {
                            return;
                        }
                        
                        proyectosMostrados.push({
                            equipo: nombreEquipo,
                            proyecto: nombreProyecto,
                            datos: datosProyecto,
                            miembros: datosEquipo.miembros || []
                        });
                    });
                });
                
                if (proyectosMostrados.length === 0) {
                    container.innerHTML = `
                        <div class="col-span-2 text-center py-8 text-gray-500">
                            <div class="text-4xl mb-2">üì≠</div>
                            <p>No hay proyectos que coincidan con los filtros</p>
                        </div>
                    `;
                    return;
                }
                
                container.innerHTML = proyectosMostrados.map(proyecto => `
                    <div class="bg-gray-700 border border-gray-600 rounded-lg p-4">
                        <div class="flex justify-between items-center mb-3">
                            <h3 class="font-semibold">${proyecto.equipo} - ${proyecto.proyecto}</h3>
                            <span class="text-xs bg-blue-600 px-2 py-1 rounded">Sprint ${proyecto.datos.sprintActual || '?'}</span>
                        </div>
                        
                        <!-- Progreso visual -->
                        <div class="mb-4">
                            <div class="flex justify-between text-sm mb-1">
                                <span>Progreso General</span>
                                <span>${proyecto.datos.porcentajeCompletado || 0}%</span>
                            </div>
                            <div class="w-full bg-gray-600 rounded-full h-3">
                                <div class="bg-green-500 h-3 rounded-full" style="width: ${proyecto.datos.porcentajeCompletado || 0}%"></div>
                            </div>
                        </div>
                        
                        <!-- Estad√≠sticas -->
                        <div class="grid grid-cols-2 gap-4 mb-4">
                            <div class="bg-gray-600 p-3 rounded text-center">
                                <p class="text-lg font-bold">${proyecto.datos.historiasEnSprint || 0}</p>
                                <p class="text-xs text-gray-400">Historias en Sprint</p>
                            </div>
                            <div class="bg-gray-600 p-3 rounded text-center">
                                <p class="text-lg font-bold">${proyecto.datos.tareasCompletadas || 0}/${proyecto.datos.totalTareas || 0}</p>
                                <p class="text-xs text-gray-400">Tareas Completadas</p>
                            </div>
                        </div>
                        
                        <!-- Miembros del equipo -->
                        <div class="text-xs">
                            <p class="font-medium mb-1">Equipo:</p>
                            <div class="flex flex-wrap gap-1">
                                ${proyecto.miembros.map(miembro => `
                                    <span class="px-2 py-1 rounded text-xs ${obtenerColorRol(miembro.rol)}">
                                        ${miembro.nickname}
                                    </span>
                                `).join('')}
                            </div>
                        </div>
                        
                        <!-- Acciones -->
                        <div class="mt-3 pt-3 border-t border-gray-600">
                            <div class="flex gap-2">
                                <button onclick="verDetalleProyecto('${proyecto.equipo}', '${proyecto.proyecto}')" 
                                        class="flex-1 bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-xs">
                                    üëÅÔ∏è Ver Detalle
                                </button>
                                <button onclick="modificarProyecto('${proyecto.equipo}', '${proyecto.proyecto}')" 
                                        class="flex-1 bg-orange-600 hover:bg-orange-700 px-3 py-1 rounded text-xs">
                                    ‚úèÔ∏è Modificar
                                </button>
                            </div>
                        </div>
                    </div>
                `).join('');
                
                // Event listeners para filtros
                document.getElementById('proyecto-selector').addEventListener('change', cargarTodosLosProyectos);
                document.getElementById('equipo-selector').addEventListener('change', cargarTodosLosProyectos);
                
            } catch (error) {
                console.error('Error cargando proyectos:', error);
                document.getElementById('proyectos-grid').innerHTML = `
                    <div class="col-span-2 text-center text-red-400 py-8">
                        ‚ùå Error cargando proyectos
                    </div>
                `;
            }
        }

        // Funciones de modales y acciones
        function abrirCambioGrupo(userId, nickname, grupoActual) {
            document.getElementById('usuario-cambio-info').textContent = `Usuario: ${nickname} (Grupo actual: ${grupoActual})`;
            document.getElementById('nuevo-grupo').value = grupoActual;
            
            document.getElementById('btn-confirmar-cambio').onclick = () => confirmarCambioGrupo(userId);
            
            document.getElementById('modal-cambiar-grupo').classList.remove('hidden');
            document.getElementById('modal-cambiar-grupo').classList.add('flex');
        }

        async function confirmarCambioGrupo(userId) {
            const nuevoGrupo = document.getElementById('nuevo-grupo').value;
            
            try {
                const response = await fetch(`/api/admin/usuarios/${userId}/cambiar-grupo`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ nuevoGrupo: nuevoGrupo })
                });
                
                if (response.ok) {
                    alert('‚úÖ Usuario cambiado de grupo exitosamente');
                    cerrarModal('modal-cambiar-grupo');
                    cargarVista(vistaActual); // Recargar vista actual
                } else {
                    alert('‚ùå Error cambiando usuario de grupo');
                }
            } catch (error) {
                alert('‚ùå Error de conexi√≥n');
            }
        }

        function cerrarModal(modalId) {
            document.getElementById(modalId).classList.add('hidden');
            document.getElementById(modalId).classList.remove('flex');
        }

        // Funciones placeholder para futuras implementaciones
        function verDetalleProyecto(equipo, proyecto) {
            alert(`üöß Ver detalle de ${equipo} - ${proyecto}\n\nFuncionalidad en desarrollo.\n\nSe podr√≠a mostrar:\n- Historias completas\n- Todas las tareas\n- Timeline del proyecto\n- Estad√≠sticas detalladas`);
        }

        function modificarProyecto(equipo, proyecto) {
            alert(`üöß Modificar ${equipo} - ${proyecto}\n\nFuncionalidad en desarrollo.\n\nSe podr√≠a permitir:\n- Editar historias\n- Modificar tareas\n- Cambiar fechas de sprint\n- Reasignar recursos`);
        }

        // Inicializaci√≥n
        document.addEventListener('DOMContentLoaded', () => {
            // Activar vista inicial
            cambiarVista('estadisticas');
            
            // Auto-refresh cada 30 segundos para mantener datos actualizados
            setInterval(() => {
                if (vistaActual === 'estadisticas') {
                    cargarEstadisticasGlobales();
                }
            }, 30000);
        });

        // Funci√≥n para exportar datos (placeholder)
        function exportarDatos() {
            alert('üöß Funcionalidad en desarrollo\n\nSe podr√≠a exportar:\n- Estad√≠sticas completas\n- Lista de usuarios\n- Estado de todos los proyectos\n- Reportes en PDF/Excel');
        }

        // Funci√≥n para generar reportes (placeholder)
        function generarReporte() {
            alert('üöß Funcionalidad en desarrollo\n\nTipos de reportes disponibles:\n- Rendimiento por equipo\n- Progreso de proyectos\n- Estad√≠sticas de usuarios\n- Timeline de sprints');
        }

        // Atajos de teclado para navegaci√≥n r√°pida (medio geek pero √∫til)
        document.addEventListener('keydown', function(e) {
            if (e.altKey) {
                switch(e.key) {
                    case '1':
                        cambiarVista('estadisticas');
                        break;
                    case '2':
                        cambiarVista('usuarios');
                        break;
                    case '3':
                        cambiarVista('equipos');
                        break;
                    case '4':
                        cambiarVista('proyectos');
                        break;
                }
            }
        });
    </script>

    <!-- Footer con info de atajos (medio nerdy) -->
    <div class="fixed bottom-4 right-4 bg-gray-800 border border-gray-600 rounded-lg p-2 text-xs text-gray-400">
        <p>üí° Atajos: Alt+1 (Stats) | Alt+2 (Users) | Alt+3 (Teams) | Alt+4 (Projects)</p>
    </div>
</body>
</html>